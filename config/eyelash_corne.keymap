#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q               &kp W           &kp E               &kp R             &kp T                             &kp UP                &kp Y      &kp U              &kp I                &kp O            &kp P                   &kp MINUS
&kp GRAVE   &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMI  &kp SQT
&kp TAB     &kp Z               &kp X           &kp C               &kp V             &kp B      &kp SPACE              &kp DOWN              &kp N      &kp M              &kp COMMA            &kp DOT          &kp FSLH                &kp BSLH
                                                &lt 2 LANGUAGE_2    &kp BACKSPACE     &kp SPACE                                               &kp SPACE  &lt 1 RETURN       &lt 2 LANGUAGE_1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans          &kp N1                        &kp N2             &kp N3                  &kp N4                &kp N5                                     &mmv MOVE_UP                     &kp N6     &kp N7         &kp N8     &kp N9     &kp N0    &kp EQUAL
&kp LEFT_BRACE  &mt LEFT_CONTROL RIGHT_BRACE  &mt LEFT_ALT HOME  &mt LEFT_COMMAND PG_UP  &mt LEFT_SHIFT PG_DN  &kp END                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN       &kp UP     &kp RIGHT  &kp LBKT  &kp RBKT
&trans          &kp EXCL                      &kp AT             &kp HASH                &kp DOLLAR            &kp PERCENT  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp CARET  &kp AMPERSAND  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PLUS
                                                                 &trans                  &kp DELETE            &trans                                                                      &trans     &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "KEYPAD";
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR  &none  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                            &mmv MOVE_UP                     &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8     &kp KP_N9  &kp KP_MINUS  &kp LPAR
&none           &none       &none  &none         &none         &none                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp KP_SLASH     &kp KP_N4  &kp KP_N5     &kp KP_N6  &kp KP_PLUS   &kp RPAR
&none           &none       &none  &none         &none         &none         &trans                    &mmv MOVE_DOWN                   &kp KP_N0        &kp KP_N1  &kp KP_N2     &kp KP_N3  &kp KP_DOT    &kp KP_EQUAL
                                   &trans        &trans        &trans                                                                   &trans           &trans     &kp KP_COMMA
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
